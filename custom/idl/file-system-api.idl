// https://www.w3.org/TR/2012/WD-file-system-api-20120417/

// This is (hopefully) the delta between the old spec and
// https://wicg.github.io/entries-api/, with adjusted names/types, and
// [Exposed=Window,Worker] to test it everywhere, just to be safe.

callback MetadataCallback = undefined (Metadata metadata);
callback FileSystemCallback = undefined (FileSystem fileSystem);

interface mixin LocalFileSystem {
  const unsigned short TEMPORARY = 0;
  const unsigned short PERSISTENT = 1;
  undefined requestFileSystem(unsigned short type, unsigned long long size, FileSystemCallback successCallback, optional ErrorCallback errorCallback);
  undefined resolveLocalFileSystemURL(DOMString url, FileSystemEntryCallback successCallback, optional ErrorCallback errorCallback);
};
Window includes LocalFileSystem;
WorkerGlobalScope includes LocalFileSystem;

[Exposed=Window,Worker]
interface Metadata {
 readonly attribute object modificationTime;
 readonly attribute unsigned long long size;
};

partial interface FileSystemEntry {
  undefined getMetadata(MetadataCallback successCallback, optional ErrorCallback errorCallback);
  undefined moveTo(FileSystemDirectoryEntry parent, optional DOMString name, optional FileSystemEntryCallback successCallback, optional ErrorCallback errorCallback);
  undefined copyTo(FileSystemDirectoryEntry parent, optional DOMString name, optional FileSystemEntryCallback successCallback, optional ErrorCallback errorCallback);
  DOMString toURL();
  undefined remove(VoidFunction successCallback, optional ErrorCallback errorCallback);
};

partial interface FileSystemFileEntry {
  undefined createWriter(VoidFunction successCallback,
                    optional ErrorCallback errorCallback);
};

// FileSystem is here: https://wicg.github.io/entries-api/#api-domfilesystem

[Supplemental, NoInterfaceObject]
interface mixin LocalFileSystemSync {
    FileSystemSync requestFileSystemSync (unsigned short type, unsigned long long size);
    EntrySync      resolveLocalFileSystemSyncURL (DOMString url);
};

WorkerGlobalScope includes LocalFileSystemSync;

[Exposed=Worker]
interface FileSystemSync {
  readonly attribute DOMString name;
  readonly attribute DirectoryEntrySync root;
};

[Exposed=Window,Worker]
interface DirectoryEntrySync {};

// The old names of things, before FileSystem prefixing
[Exposed=Worker] interface DirectoryReaderSync {};
[Exposed=Worker] interface EntrySync {};
[Exposed=Worker] interface FileEntrySync {};

// In BCD, but removed in the new spec
partial interface FileSystemDirectoryEntry {
  undefined removeRecursively(VoidFunction successCallback, optional ErrorCallback errorCallback);
};


// Remove when https://github.com/whatwg/fs/pull/165 is merged

dictionary FileSystemObserverObserveOptions { boolean recursive = false; };

callback FileSystemObserverCallback = undefined (sequence<FileSystemChangeRecord> records, FileSystemObserver observer);

[Exposed=(DedicatedWorker,SharedWorker,Window),SecureContext]
interface FileSystemObserver {
  constructor(FileSystemObserverCallback callback);  
  Promise<undefined> observe(FileSystemHandle handle, optional FileSystemObserverObserveOptions options = {});  
  undefined unobserve(FileSystemHandle handle);  undefined disconnect();
};

enum FileSystemChangeType {  "appeared",  "disappeared",  "errored",  "modified",  "moved",  "unknown", };

dictionary FileSystemChangeRecord {  
  required FileSystemHandle root;  
  FileSystemHandle? changedHandle;  
  required sequence<DOMString> relativePathComponents;  
  required FileSystemChangeType type;  
  sequence<DOMString>? relativePathMovedFrom;
};
