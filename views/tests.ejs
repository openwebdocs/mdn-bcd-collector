<!--
mdn-bcd-collector: views/tests.ejs
Page for running the specified tests

Â© Gooborg Studios, Google LLC
See the LICENSE file for copyright details
-->

<%- contentFor('body') %>
<%- include('unsecurewarning') %>
<%- include('extensioncheck', {sendToServer: true}) %>
<% if (dev) {%><p class="error-notice">Note: you are running a development version of the collector!</p><% } %>
<p id="status">Running tests...</p>
<form id="export" action="/export" method="post">
  <button id="export-download" class="export-button" type="submit" name="download" value="download" disabled><span class="mdi mdi-download"></span> Download results file</button>
  <button id="export-github" class="export-button <% if (!github) {%>always-disabled<% } %>" type="submit" name="github" value="github" disabled><span class="mdi mdi-github"></span> <% if (github) {%>Send results to mdn-bcd-results GitHub repo<% } else { %>GitHub export disabled<% } %></button>
</form>
<div id="results">
  <hr />
</div>

<% let resourcesToLoad = new Set(); %>
<% tests.forEach(function(test) {
  for (const r of test.resources) {
    resourcesToLoad.add(r);
  }
}); %>
<div id="resources" style="display: none;">
  <% for (const resourceId of resourcesToLoad.values()) {
    const resource = resources[resourceId];
    switch (resource.type) {
      case 'audio':
      case 'video': %>
        <<%-resource.type%> id="resource-<%-resourceId%>">
          <% for (const src of resource.src) { %>
            <source src="/resources/custom-tests<%-src%>" />
          <% } %>
          <% if (resource.subtitles) {
            let i = 0;
            for (const sub of resource.subtitles) { %>
            <track label="<%-sub.label%>" kind="subtitles" srclang="<%-sub.lang%>" src="/resources/custom-tests<%-sub.src%>" <% if (i == 0) { %>default<% } %>>
          <% i += 1;
            }
          } %>
        </<%-resource.type%>>
        <% break;
      case 'image': %>
        <img id="resource-<%-resourceId%>" src="/resources/custom-tests<%-resource.src%>" alt="<%-resource.alt%>" />
        <% break;
      case 'instance':
        // We handle this down below
        break;
      default:
        throw new Error(`Tried to load an unknown instance type of ${resource.type}!`)
    }
  } %>
</div>

<script src="/resources/harness.js"></script>

<script>
  <% for (const [instanceId, instance] of Object.entries(resources)
    .filter((item) => (item[1].type === 'instance'))) {
    if (resourcesToLoad.has(instanceId)) { %>
      bcd.addInstance("<%- instanceId %>", <%- JSON.stringify(instance.src) %>, {callback: <%- !!instance.callback %>});
    <% }
   } %>
  <% tests.forEach(function(test) { %>
    bcd.addTest("<%- test.ident %>", <%- JSON.stringify(test.tests) %>, "<%- test.exposure %>");
  <% }); %>
  window.onload = function() {
    bcd.go(undefined, <%- resourcesToLoad.size %>, <%- !!selenium %>)
  };
</script>
